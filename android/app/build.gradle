plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

def devKeystoreProperties = new Properties()
def devKeystorePropertiesFile = rootProject.file('dev.properties')
if (devKeystorePropertiesFile.exists()) {
    devKeystoreProperties.load(new FileInputStream(devKeystorePropertiesFile))
}

def prodKeystoreProperties = new Properties()
def prodKeystorePropertiesFile = rootProject.file('prod.properties')
if (prodKeystorePropertiesFile.exists()) {
    prodKeystoreProperties.load(new FileInputStream(prodKeystorePropertiesFile))
}

android {
    namespace "com.mirrormedia.news"
    compileSdk 35

    defaultConfig {
        applicationId "com.mirrormedia.news"
        minSdkVersion 24
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        ndkVersion "25.1.8937393"
        ndk {
            debugSymbolLevel 'FULL'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lint {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    signingConfigs {
        dev {
            if (System.getenv()["CI"]) {
                storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
                storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["FCI_KEY_ALIAS"]
                keyPassword System.getenv()["FCI_KEY_PASSWORD"]
            } else {
                keyAlias devKeystoreProperties['keyAlias']
                keyPassword devKeystoreProperties['keyPassword']
                storeFile devKeystoreProperties['storeFile'] ? file(devKeystoreProperties['storeFile']) : null
                storePassword devKeystoreProperties['storePassword']
            }
        }
        prod {
            if (System.getenv()["CI"]) {
                storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
                storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["FCI_KEY_ALIAS"]
                keyPassword System.getenv()["FCI_KEY_PASSWORD"]
            } else {
                keyAlias prodKeystoreProperties['keyAlias']
                keyPassword prodKeystoreProperties['keyPassword']
                storeFile prodKeystoreProperties['storeFile'] ? file(prodKeystoreProperties['storeFile']) : null
                storePassword prodKeystoreProperties['storePassword']
            }
        }
    }

    flavorDimensions += "flavors"
    productFlavors {
        dev {
            dimension "flavors"
            applicationIdSuffix ".dev"
        }
        prod {
            dimension "flavors"
        }
    }

    buildTypes {
        release {
            productFlavors.dev.signingConfig signingConfigs.dev
            productFlavors.prod.signingConfig signingConfigs.prod
            shrinkResources false
            minifyEnabled false
        }
    }
}

flutter {
    source = '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7"
    implementation 'com.google.firebase:firebase-messaging:20.2.4'
    implementation 'com.android.billingclient:billing:7.0.0'
}
